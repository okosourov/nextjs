/// <reference types="node" />
import { SessionData } from './types';
import Cookie from './cookie';
import { SessionOptions } from './types';
import { ServerResponse } from 'http';
declare interface Session<
  T extends {
    [key: string]: any;
  } = {}
> {
  id: string;
  res: ServerResponse;
  _opts: SessionOptions;
  _sessStr: string;
  isNew: boolean;
  isDestroy: boolean;
  [field: string]: any;
}
declare class Session<T = {}> {
  cookie: Cookie;
  constructor(
    res: ServerResponse,
    options: SessionOptions,
    prevSess: SessionData | null
  );
  touch(): Promise<unknown>;
  save(): Promise<unknown>;
  destroy(): Promise<unknown>;
  shouldTouch(): boolean | undefined;
  commitHead(): void;
  commit(): Promise<void>;
}
export default Session;
