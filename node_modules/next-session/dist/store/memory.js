"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const events_1 = require("events");
class MemoryStore extends events_1.EventEmitter {
    constructor() {
        super();
        this.sessions = {};
    }
    get(sid) {
        const self = this;
        const sess = this.sessions[sid];
        if (sess) {
            const session = JSON.parse(sess);
            session.cookie.expires = session.cookie.expires
                ? new Date(session.cookie.expires)
                : null;
            if (!session.cookie.expires ||
                Date.now() < session.cookie.expires.getTime()) {
                //  check expires before returning
                return Promise.resolve(session);
            }
            self.destroy(sid);
            return Promise.resolve(null);
        }
        return Promise.resolve(null);
    }
    set(sid, sess) {
        this.sessions[sid] = JSON.stringify(sess);
        return Promise.resolve();
    }
    touch(sid, session) {
        return this.get(sid).then((sess) => {
            if (sess) {
                const newSess = {
                    ...sess,
                    cookie: session.cookie,
                };
                return this.set(sid, newSess);
            }
            return undefined;
        });
    }
    all() {
        return Promise.resolve(Object.values(this.sessions));
    }
    destroy(sid) {
        delete this.sessions[sid];
        return Promise.resolve();
    }
}
exports.default = MemoryStore;
